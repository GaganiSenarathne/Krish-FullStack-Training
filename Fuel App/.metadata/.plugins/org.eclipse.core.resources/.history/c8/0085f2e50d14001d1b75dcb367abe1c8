package com.example.demo.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.data.mongodb.core.MongoOperations;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.data.mongodb.core.query.Update;
import org.springframework.stereotype.Service;

import com.example.demo.model.InventoryReserved;
import com.example.demo.repository.InventoryReservedRepository;

@Service
public class InventoryReservedServiceImpl implements InventoryReservedService{

	
	@Autowired
	InventoryReservedRepository inventoryReservedRepository;
	
	@Autowired
    private MongoTemplate mongoTemplate;
	
	private MongoOperations mongoOperations;
	
	@Override
	public InventoryReserved saveReservedInventory(InventoryReserved inventoryReserved) {

		return inventoryReservedRepository.save(inventoryReserved);
	}

	@Override
	public InventoryReserved getFromInventoryAvailable(String orderRefId, String fuelType, int fuelCapacity) {
		InventoryReserved inventoryReserved = new InventoryReserved();
		
		
		
		inventoryReserved.setRefID(orderRefId);
		inventoryReserved.setFuelType(fuelType);
		inventoryReserved.setQty(fuelCapacity);
		return saveReservedInventory(inventoryReserved);
	}


    public long generateSequence(String seqName) {

        InventoryReserved reserved = mongoOperations.findAndModify(query(where("_id").is(seqName)),
                new Update().inc("seq",1), options().returnNew(true).upsert(true),
                DatabaseSequence.class);
        return !Objects.isNull(reserved) ? reserved.getSeq() : 1;

    }

}
