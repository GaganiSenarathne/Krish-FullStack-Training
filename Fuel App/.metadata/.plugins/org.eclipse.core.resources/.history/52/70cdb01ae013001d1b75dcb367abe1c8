package com.example.demo.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import com.example.demo.model.InventoryAvailable;
import com.example.demo.model.InventoryUsable;
import com.example.demo.repository.InventoryAvailableRepository;
import com.example.demo.repository.InventoryUsableRepository;

public class InventoryUsableServiceImpl implements InventoryUsableService{

	
	@Autowired
	InventoryUsableRepository inventoryUsableRepository;
	
	@Autowired
	InventoryReservedService inventoryReservedService;
	
	@Autowired
	InventoryAvailableRepository availableRepository;
	
	
	
	@Override
	public ResponseEntity<InventoryUsable> saveFuelUsable(InventoryUsable inventoryUsable) {
		
		try {
//			Saving Available Fuel QTY
			inventoryUsableRepository.save(inventoryUsable);
		
		}catch(Exception e) {
			
			e.printStackTrace();
			
		}
	
		return ResponseEntity.status(HttpStatus.OK).body(inventoryUsable);
	}


	@Override
	public InventoryUsable getUsableCapacity(String fuelType, int Capacity, String RefID) {

		InventoryAvailable inventoryAvailable = availableRepository.findByFuelType(fuelType);
		InventoryUsable usable = new InventoryUsable();
		int availableCapacity = inventoryAvailable.getQty();
		String status = "Allocated";
		// if(capacity>=fuelCapacity){
			 
			// Order newOrder = getOrder(orderRefeId, "Allocated");
			 int usableCapacity  = availableCapacity - Capacity;
			 usable.setQty(usableCapacity);
			 saveFuelAvailable(inventoryAvailable);
			 inventoryReservedService.getFromInventoryAvailable(RefID, fuelType, Capacity);
				//getOrder(orderRefeId, status);
		// }
				
		return inventoryAvailable;
	}

}
