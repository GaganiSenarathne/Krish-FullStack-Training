package com.example.demo.listener;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.messaging.handler.annotation.Payload;
import org.springframework.stereotype.Component;

import com.example.demo.model.Order;
import com.example.demo.service.InventoryAvailableService;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

@Component
public class Listener {
	
	@Autowired
	InventoryAvailableService availableService;
	
	@KafkaListener(topics = "topic-order", groupId = "group-01")
    public void consumeJson(@Payload List<Order> data){

        String value = String.valueOf(data);
        String fuelType = "";
        String status = "";
        String refId = "";
        int fuelCapacity = 0;
      
        ObjectMapper objectMapper = new ObjectMapper();
        try {

        	 List<Order> ojectList = objectMapper.readValue(value, new TypeReference<List<Order>>(){});
            for(Order model : ojectList) {
                System.out.println(model.getCapacity());
                fuelType = model.getFuelType();
                fuelCapacity = model.getCapacity();
                status = model.getStatus();
                refId  = model.getRefId();
            }
        } catch (JsonProcessingException e) {
            e.printStackTrace();
        }

        System.out.println(availableService.getCapacity(fuelType,fuelCapacity,refId));

    }
	
	

}
